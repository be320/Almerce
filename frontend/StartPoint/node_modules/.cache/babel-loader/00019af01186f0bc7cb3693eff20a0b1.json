{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Almerce\\\\frontend\\\\StartPoint\\\\src\\\\FrontEndDivions\\\\2-Body\\\\1-BodyGroup.js\",\n    _s = $RefreshSig$();\n\nimport './_Body.css';\nimport { connect } from \"react-redux\";\nimport MessageTemplate from '../2-Body/MessageTemplate';\nimport VoiceNoteTemplate from '../2-Body/VoiceNoteTemplate';\nimport ImageTemplate from '../2-Body/ImageTemplate';\nimport { useEffect, useRef } from 'react';\n\nconst BodyContainer = props => {\n  _s();\n\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [props.bodyContainer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      style: {\n        height: \"calc(100vh - \" + props.bodyWindowSize.height + \"px)\"\n      },\n      children: [props.bodyContainer.map(item => {\n        if (item.elementType === 'MessageTemplate') {\n          console.log('Message Received');\n          return /*#__PURE__*/_jsxDEV(MessageTemplate, {\n            serverSide: item.serverSide,\n            message: item.message.TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 12\n          }, this);\n        } else if (item.elementType === 'AudioTemplate') {\n          console.log('Audio Received');\n          return /*#__PURE__*/_jsxDEV(VoiceNoteTemplate, {\n            Audio: item.audio.AudioState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 14\n          }, this);\n        } else if (item.elementType === 'ImageTemplate') {\n          console.log('Image Received');\n          return /*#__PURE__*/_jsxDEV(ImageTemplate, {\n            image: item.image.selectedImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}; //this function map the component with the state stored in the store\n//so this will be passed to this component via props as if the store \n//is the parent of this component\n\n\n_s(BodyContainer, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n\n_c = BodyContainer;\n\nconst mapStateToProps = state => {\n  return {\n    bodyContainer: state.slice(1),\n    bodyWindowSize: state[0]\n  };\n};\n\nexport default connect(mapStateToProps)(BodyContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyContainer\");","map":{"version":3,"sources":["D:/Almerce/frontend/StartPoint/src/FrontEndDivions/2-Body/1-BodyGroup.js"],"names":["connect","MessageTemplate","VoiceNoteTemplate","ImageTemplate","useEffect","useRef","BodyContainer","props","messagesEndRef","current","scrollIntoView","behavior","bodyContainer","height","bodyWindowSize","map","item","elementType","console","log","serverSide","message","TextField","audio","AudioState","image","selectedImage","mapStateToProps","state","slice"],"mappings":";;;;;;AAAA,OAAO,aAAP;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAKA,MAAMC,aAAa,GAAEC,KAAD,IAAS;AAAA;;AAE3B,QAAMC,cAAc,GAAGH,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACC,OAAf,CAAuBC,cAAvB,CAAsC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAtC;AACD,GAFQ,EAEN,CAACJ,KAAK,CAACK,aAAP,CAFM,CAAT;AAKF,sBAAM;AAAA,2BACN;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAC1BC,QAAAA,MAAM,EAAC,kBAAgBN,KAAK,CAACO,cAAN,CAAqBD,MAArC,GAA4C;AADzB,OAA7B;AAAA,iBAGCN,KAAK,CAACK,aAAN,CAAoBG,GAApB,CAAwBC,IAAI,IAAI;AAE/B,YAAIA,IAAI,CAACC,WAAL,KAAoB,iBAAxB,EAA0C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,8BAAO,QAAC,eAAD;AACP,YAAA,UAAU,EAAEH,IAAI,CAACI,UADV;AAEP,YAAA,OAAO,EAAEJ,IAAI,CAACK,OAAL,CAAaC;AAFf;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGG,SALL,MAMO,IAAIN,IAAI,CAACC,WAAL,KAAoB,eAAxB,EAAwC;AAC3CC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,8BAAO,QAAC,iBAAD;AACP,YAAA,KAAK,EAAEH,IAAI,CAACO,KAAL,CAAWC;AADX;AAAA;AAAA;AAAA;AAAA,kBAAP;AAED,SAJI,MAKA,IAAIR,IAAI,CAACC,WAAL,KAAoB,eAAxB,EAAwC;AAC3CC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,8BAAO,QAAC,aAAD;AACP,YAAA,KAAK,EAAEH,IAAI,CAACS,KAAL,CAAWC;AADX;AAAA;AAAA;AAAA;AAAA,kBAAP;AAED;AACJ,OAlBA,CAHD,eAsBG;AAAK,QAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA,cAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAN;AA2BC,CApCD,C,CAsCA;AACA;AACA;;;GAxCMF,a;;KAAAA,a;;AAyCN,MAAMqB,eAAe,GAAGC,KAAD,IAAS;AAC5B,SAAO;AACJhB,IAAAA,aAAa,EAAEgB,KAAK,CAACC,KAAN,CAAY,CAAZ,CADX;AAEJf,IAAAA,cAAc,EAAEc,KAAK,CAAC,CAAD;AAFjB,GAAP;AAID,CALH;;AAOA,eAAe5B,OAAO,CAAC2B,eAAD,CAAP,CAAyBrB,aAAzB,CAAf","sourcesContent":["import './_Body.css'\r\nimport { connect } from \"react-redux\";\r\nimport MessageTemplate from '../2-Body/MessageTemplate'\r\nimport VoiceNoteTemplate from '../2-Body/VoiceNoteTemplate';\r\nimport ImageTemplate from '../2-Body/ImageTemplate';\r\nimport { useEffect, useRef } from 'react'\r\n\r\n\r\n\r\n\r\nconst BodyContainer=(props)=>{\r\n\r\n  const messagesEndRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [props.bodyContainer]);\r\n\r\n\r\nreturn<>\r\n<div className=\"body\" style={{\r\n   height:\"calc(100vh - \"+props.bodyWindowSize.height+\"px)\"\r\n    }}>\r\n{props.bodyContainer.map(item => { \r\n\r\n  if (item.elementType ==='MessageTemplate'){\r\n    console.log('Message Received');\r\n    return <MessageTemplate\r\n    serverSide={item.serverSide}\r\n    message={item.message.TextField}\r\n    />}\r\n    else if (item.elementType ==='AudioTemplate'){\r\n      console.log('Audio Received');\r\n      return <VoiceNoteTemplate\r\n      Audio={item.audio.AudioState}/>\r\n    }\r\n    else if (item.elementType ==='ImageTemplate'){\r\n      console.log('Image Received');\r\n      return <ImageTemplate\r\n      image={item.image.selectedImage}/>\r\n    }\r\n})}\r\n   <div ref={messagesEndRef} />\r\n</div>\r\n\r\n</>\r\n}\r\n\r\n//this function map the component with the state stored in the store\r\n//so this will be passed to this component via props as if the store \r\n//is the parent of this component\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n       bodyContainer: state.slice(1),\r\n       bodyWindowSize: state[0]\r\n    };\r\n  }\r\n  \r\nexport default connect(mapStateToProps)(BodyContainer);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}