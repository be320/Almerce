{"ast":null,"code":"//1- create the initial store storage\n//2- Store takes a new state, then tell redux to redisplay the change\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport Reducer from '../4-Redux/Reducers/Reducer';\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(Reducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/Almerce/frontend/StartPoint/src/FrontEndDivions/4-Redux/Store.js"],"names":["createStore","applyMiddleware","compose","Reducer","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,gBAAgB,GACtBC,MAAM,CAACC,oCAAP,IAA+CL,OAD/C;AAGA,MAAMM,KAAK,GAAGR,WAAW,CAACG,OAAD,EACrBE,gBAAgB,CAACJ,eAAe,CAACG,KAAD,CAAhB,CADK,CAAzB;AAGA,eAAeI,KAAf","sourcesContent":["//1- create the initial store storage\r\n//2- Store takes a new state, then tell redux to redisplay the change\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport Reducer from '../4-Redux/Reducers/Reducer'\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\n\r\nconst store = createStore(Reducer, \r\n    composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}